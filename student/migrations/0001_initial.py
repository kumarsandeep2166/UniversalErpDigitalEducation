# Generated by Django 2.1.7 on 2019-08-03 09:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import student.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('coursemanagement', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('mr', 'Mr.'), ('ms', 'Mrs.'), ('miss', 'Miss'), ('dr', 'Dr.')], default='Mr.', max_length=5)),
                ('first_name', models.CharField(max_length=15)),
                ('middle_name', models.CharField(max_length=15)),
                ('last_name', models.CharField(max_length=15)),
                ('date_of_birth', models.DateTimeField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'others')], default='Male', max_length=10)),
                ('fathers_name', models.CharField(max_length=40)),
                ('mothers_name', models.CharField(max_length=40)),
                ('phone_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', message='Phone Number must be of 12 Digits')])),
                ('aadhar_no', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^[0-9]{12}$', message='Aadhar Number must be of 12 Digits')])),
                ('pan_no', models.CharField(max_length=15)),
                ('epfo_no', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=254)),
                ('nationality', models.CharField(choices=[('in', 'Indian')], max_length=10)),
                ('caste', models.CharField(choices=[('Gen', 'GEN'), ('sc', 'SC'), ('st', 'ST'), ('obc', 'OBC'), ('others', 'Others')], default='Others', max_length=5)),
                ('religion', models.CharField(choices=[('H', 'Hindu'), ('M', 'Muslim'), ('C', 'Christian'), ('O', 'Others')], default='Hindu', max_length=20)),
                ('scale_of_pay', models.CharField(choices=[('5th', '5th Pay'), ('6th', '6th Pay'), ('cons', 'Consolidated')], default=20, max_length=15)),
                ('type_of_joining', models.CharField(choices=[('part', 'Part Time'), ('full', 'Full Time'), ('part', 'Contracted')], default='Full Time', max_length=15)),
                ('communication_address', models.TextField()),
                ('communication_lane_address', models.CharField(max_length=70)),
                ('landmark', models.CharField(max_length=70)),
                ('pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', message='')])),
                ('city', models.CharField(max_length=30)),
                ('bank_name', models.CharField(blank=True, max_length=25)),
                ('bank_account_number', models.IntegerField()),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=25)),
                ('bank_branch', models.CharField(blank=True, max_length=25)),
                ('tenth_subjects', models.CharField(max_length=20)),
                ('tenth_school', models.CharField(max_length=20)),
                ('tenth_board', models.CharField(max_length=20)),
                ('tenth_full_mark', models.IntegerField()),
                ('tenth_secured_mark', models.IntegerField()),
                ('tenth_percentage', models.FloatField()),
                ('twelth_stream', models.CharField(max_length=20)),
                ('twelth_college', models.CharField(max_length=20)),
                ('twelth_board', models.CharField(max_length=20)),
                ('twelth_full_mark', models.IntegerField()),
                ('twelth_secured_mark', models.IntegerField()),
                ('tewlth_percentage', models.FloatField()),
                ('degree_stream', models.CharField(max_length=20)),
                ('degree_college', models.CharField(max_length=20)),
                ('degree_university', models.CharField(max_length=20)),
                ('degree_full_mark', models.IntegerField(blank=True, null=True)),
                ('degree_secured_mark', models.IntegerField(blank=True, null=True)),
                ('degree_percentage', models.FloatField()),
                ('postdegree_stream', models.CharField(blank=True, max_length=20)),
                ('postdegree_college', models.CharField(blank=True, max_length=20)),
                ('postdegree_university', models.CharField(blank=True, max_length=20)),
                ('postdegree_full_mark', models.IntegerField(blank=True, null=True)),
                ('postdegree_secured_mark', models.IntegerField(blank=True, null=True)),
                ('postdegree_percentage', models.FloatField(blank=True, null=True)),
                ('teaching_experience', models.IntegerField()),
                ('industry_experience', models.IntegerField()),
                ('experience_details', models.TextField(blank=True)),
                ('last_appointment_type', models.CharField(choices=[('part', 'Part Time'), ('full', 'Full Time'), ('part', 'Contracted')], default='Full Time', max_length=20)),
                ('last_payment_scale', models.CharField(choices=[('5th', '5th Pay'), ('6th', '6th Pay'), ('cons', 'Consolidated')], default='5th pay', max_length=20)),
                ('other_qualifiaction', models.CharField(blank=True, max_length=15)),
                ('area_of_specialization', models.CharField(max_length=50)),
                ('ug_degree', models.CharField(choices=[('b.tech', 'B.Tech'), ('bachlr', 'Bachelors'), ('be', 'BE')], default='B.Tech', max_length=30)),
                ('pg_degree', models.CharField(choices=[('m.tech', 'M.Tech'), ('master', 'Masters'), ('me', 'ME')], default='M.Tech', max_length=25)),
                ('patents_issued', models.IntegerField(blank=True)),
                ('no_of_pg_projects', models.IntegerField(blank=True)),
                ('physically_handicaped', models.CharField(choices=[('y', 'Yes'), ('n', 'No')], max_length=1)),
                ('national_journal_no', models.IntegerField(blank=True)),
                ('international_journal_no', models.IntegerField(blank=True)),
                ('journal_details', models.TextField(blank=True)),
                ('national_conference_no', models.IntegerField(blank=True)),
                ('international_conference_no', models.IntegerField(blank=True)),
                ('conference_details', models.TextField(blank=True)),
                ('status', models.BooleanField(default=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Country')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Districts')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employee_Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_designation', models.CharField(max_length=150)),
                ('employee_department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Employee_Department')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('date_of_admission', models.DateField(blank=True, default='2019-09-06', null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coursemanagement.Batch')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coursemanagement.Course')),
                ('stream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coursemanagement.Stream')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=30)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('blood_group', models.CharField(choices=[('A+ve', 'A+ve'), ('A-ve', 'A-ve'), ('B+ve', 'B+ve'), ('B-ve', 'B-ve'), ('AB+ve', 'AB+ve'), ('AB-ve', 'AB-ve'), ('O+ve', 'O+ve'), ('O-ve', 'O-ve')], default='O+ve', max_length=5)),
                ('nationality', models.CharField(choices=[('india', 'India'), ('others', 'others')], default='india', max_length=10)),
                ('caste', models.CharField(choices=[('Gen', 'GEN'), ('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC'), ('Others', 'Others')], default='Others', max_length=10)),
                ('sub_caste', models.CharField(choices=[('Gen', 'GEN'), ('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC'), ('Others', 'Others')], default='Others', max_length=10)),
                ('place_of_birth', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', message='Phone Number must be of 10 Digits')])),
                ('aadhar_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^[0-9]{12}$', message='Aadhar Number must be of 12 Digits')])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('fathers_name', models.CharField(max_length=20)),
                ('fathers_occupation', models.CharField(choices=[('GE', 'Govt. Employee'), ('PE', 'Private Employee'), ('SE', 'Self Employed'), ('B', 'Businessman'), ('O', 'Others')], default='Others', max_length=30)),
                ('fathers_date_of_birth', models.DateField()),
                ('fathers_phone_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', message='Please Enter a Valid Phone Number')])),
                ('fathers_email_id', models.EmailField(max_length=254)),
                ('fathers_annual_income', models.CharField(max_length=10)),
                ('mothers_name', models.CharField(max_length=20)),
                ('mothers_occupation', models.CharField(choices=[('GE', 'Govt. Employee'), ('PE', 'Private Employee'), ('SE', 'Self Employed'), ('B', 'Businesswoman'), ('HM', 'Home Maker'), ('O', 'Others')], default='Others', max_length=30)),
                ('mothers_date_of_birth', models.DateField(blank=True)),
                ('mothers_phone_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', message='Please Enter a Valid Phone Number')])),
                ('mothers_email_id', models.EmailField(blank=True, max_length=254)),
                ('mothers_annual_income', models.CharField(blank=True, max_length=10)),
                ('tenth_board', models.CharField(blank=True, max_length=50, null=True)),
                ('tenth_subjects', models.CharField(blank=True, max_length=50, null=True)),
                ('tenth_school', models.CharField(blank=True, max_length=50, null=True)),
                ('tenth_full_mark', models.IntegerField(blank=True, null=True)),
                ('tenth_secured_mark', models.IntegerField(blank=True, null=True)),
                ('tenth_percentage', models.FloatField(blank=True, null=True)),
                ('twelth_board', models.CharField(max_length=20)),
                ('twelth_stream', models.CharField(max_length=20)),
                ('twelth_school', models.CharField(max_length=20)),
                ('twelth_full_mark', models.IntegerField(blank=True, null=True)),
                ('twelth_secured_mark', models.IntegerField(blank=True, null=True)),
                ('tewlth_percentage', models.FloatField(blank=True, null=True)),
                ('degree_stream', models.CharField(blank=True, max_length=20, null=True)),
                ('degree_college', models.CharField(blank=True, max_length=20, null=True)),
                ('degree_university', models.CharField(blank=True, max_length=20, null=True)),
                ('degree_full_mark', models.IntegerField(blank=True, null=True)),
                ('degree_secured_mark', models.IntegerField(blank=True, null=True)),
                ('degree_percentage', models.FloatField(blank=True, null=True)),
                ('postdegree_stream', models.CharField(blank=True, max_length=20, null=True)),
                ('postdegree_college', models.CharField(blank=True, max_length=20, null=True)),
                ('postdegree_university', models.CharField(blank=True, max_length=20, null=True)),
                ('postdegree_full_mark', models.IntegerField(blank=True, null=True)),
                ('postdegree_secured_mark', models.IntegerField(blank=True, null=True)),
                ('postdegree_percentage', models.FloatField(blank=True, null=True)),
                ('present_house_no', models.CharField(max_length=300)),
                ('present_Lane', models.CharField(max_length=300)),
                ('present_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', message='Aadhar Number must be of 12 Digits')])),
                ('present_same_address', models.BooleanField(blank=True, default=False)),
                ('permanent_house_no', models.CharField(max_length=300)),
                ('permanent_Lane', models.CharField(max_length=300)),
                ('permanent_pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', message='Aadhar Number must be of 12 Digits')])),
                ('entrance_name', models.CharField(max_length=20)),
                ('entrance_year', models.IntegerField(choices=[(1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], default=2019, verbose_name='year')),
                ('entrance_score', models.FloatField()),
                ('student_pic', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_tenth', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_twelth', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_degree', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_clc', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_conduct_certificate', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_migration', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_birth_certificate', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_address', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_thumb', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('student_signature', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('tenth_marksheet', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('tewlth_marksheet', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('degree_marksheet', models.ImageField(blank=True, null=True, upload_to=student.models.PathAndRename('documents/2019/08/03'))),
                ('term_and_condition', models.BooleanField(default=False)),
                ('academic_status', models.IntegerField(default=1)),
                ('fee_status', models.IntegerField(default=1)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursemanagement.Batch')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursemanagement.Course')),
                ('permanent_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Country')),
                ('permanent_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Districts')),
                ('permanent_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.State')),
                ('present_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cntry', to='student.Country')),
                ('present_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dist', to='student.Districts')),
                ('present_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='st', to='student.State')),
                ('stream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursemanagement.Stream')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentEnquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('phone_no', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', message='Phone number must be of 10 digit!!')])),
                ('email_id', models.EmailField(max_length=254)),
                ('shift', models.CharField(choices=[('FIRST SHIFT', 'First Shift'), ('SECOND SHIFT', 'Second Shift')], default='First Shift', max_length=26)),
                ('last_education', models.CharField(max_length=26)),
                ('entrance', models.CharField(max_length=40)),
                ('year', models.IntegerField(choices=[(1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], default=2019, verbose_name='year')),
                ('score', models.IntegerField()),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursemanagement.Course')),
                ('stream', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursemanagement.Stream')),
            ],
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Student'),
        ),
        migrations.AddField(
            model_name='employee',
            name='employee_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Employee_Department'),
        ),
        migrations.AddField(
            model_name='employee',
            name='employee_designation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='student.Employee_Designation'),
        ),
        migrations.AddField(
            model_name='employee',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.State'),
        ),
        migrations.AddField(
            model_name='districts',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.State'),
        ),
        migrations.AddField(
            model_name='branch',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Department'),
        ),
    ]
